# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test build pdspy package across platforms and versions

on:
  push:
    branches: [master]
    paths-ignore:
      - 'docs/*'
      - '.readthedocs.yaml'
  release:
    branches: [master]

jobs:
  build_wheels:
    name: Test build status

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    
    #- name: Symlink gfortran (macOS)
    #  if: runner.os == 'macOS'
    #  run: |
        # make sure gfortran is available
        # https://github.com/actions/virtual-environments/issues/2524
        # https://github.com/cbg-ethz/dce/blob/master/.github/workflows/pkgdown.yaml
    #    sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
    #    sudo mkdir /usr/local/gfortran
    #    sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
    #    gfortran --version
    
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.19.2
      
    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl
        
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'
          
      - name: Install numpy and Cython
        run: 
          pip install numpy
          pip install cython

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    #if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
